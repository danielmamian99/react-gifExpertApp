{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACvCC,EADuC,KAC5BC,EAD4B,KAa9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,sCCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,YACnB,MAAM,CACFC,GAFwC,EAAvBA,GAGjBC,MAHwC,EAAnBA,MAIrBT,IAJwC,EAAZU,OAIhBC,iBAAiBX,QARlB,kBAYZM,GAZY,4CAAH,sDCCPM,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEpC,OACI,sBAAKa,UAAU,2CAAf,UACI,qBAAKC,IAAOd,EAAMe,IAAON,IACzB,kCAAKA,EAAL,WCFCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAc,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OAXAC,qBAAW,WACPvB,EAASC,GACRuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGlB,CAACnB,IAGGoB,EDdwBK,CAAazB,GAAhCY,EADyB,EAC9BL,KAAaY,EADiB,EACjBA,QAGpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,UAAmDf,EAAnD,OACEmB,GAAW,mBAAGJ,UAAU,oCAAb,qBACb,sBAAKA,UAAU,YAAf,UAGQH,EAAOH,KAAI,SAAAiB,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIhB,OAKnB,kCEaDiB,EAhCO,WAAO,IAAD,EACYzC,mBAAS,CAAC,cADtB,mBACjB0C,EADiB,KACL3C,EADK,KASxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAUA,GACLA,Y,MClB7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6f588b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue,setInputValue] = useState('')\r\n    const handdleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cates => [inputValue, ...cates]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange = {handdleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&api_key=V7MeFKQzaREwqftURM1A4MSxYSc5yVUy&limit=10`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( ({id, title, images}) => {\r\n        return{\r\n            id: id,\r\n            title: title,\r\n            url: images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated  animate__fadeIn '>\r\n            <img src ={ url } alt = {title}></img>\r\n            <p> {title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__bounce'>{category} </h3>\r\n            { loading && <p className='animate__animated animate__fadeIn'>Loading</p>}\r\n            <div className='card-grid'>\r\n                \r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    )\r\n                }\r\n                <button></button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect (() =>{\r\n        getGifs( category )\r\n        .then( imgs => { \r\n            setState({ \r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category]);\r\n\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp =  () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    /* const handleAdd = () =>{\r\n        // manera simple de hacerlo\r\n        //setCategories( [...categories,'HunterxHunter']);\r\n        setCategories( cates => [...cates, 'HunterxHunter']);\r\n    }; \r\n */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}> Agregar </button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        category={category}\r\n                        key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}